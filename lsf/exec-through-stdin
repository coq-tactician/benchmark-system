#!/usr/bin/env python3
from subprocess import *
import sys

from pathlib import Path

source_path = Path(__file__).resolve()
source_dir = source_path.parent

jobid = sys.argv[1]
cmds = sys.argv[3:]

pipe_process = Popen([source_dir / "write-cmd-to-stdin"] + cmds, stdout=PIPE)
exec_process = Popen(["battach", "-L", source_dir / "exec-from-stdin", jobid], stdin=pipe_process.stdout)
# tail_process = Popen([source_dir / "test"], stdin=exec_process.stdout)
pipe_process.stdout.close()  # Allow pipe_process to receive a SIGPIPE if grep_process exits.
#exec_process.communicate() # Wait for exec_process, but not for pipe_process
# exec_process.stdout.close()  # Allow pipe_process to receive a SIGPIPE if grep_process exits.
exec_process.communicate()
pipe_process.terminate()
pipe_process.wait()
#tail_process.stdout.close()
